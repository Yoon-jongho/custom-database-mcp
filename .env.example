# ===========================================
# Database-MCP 다중 DB 설정 예제
# ===========================================

# 기본 DB 설정 (기존 호환성 유지)
DB_HOST=localhost
DB_PORT=3306
DB_USER=your_user
DB_PASSWORD=your_password
DB_DATABASE=test_db

# ===========================================
# 다중 DB 설정 (JSON 형태)
# ===========================================
# DB 목록을 JSON 형태로 정의
# 각 DB는 고유한 name을 가져야 함
DATABASES='[
  {
    "name": "main_db",
    "host": "localhost",
    "port": 3306,
    "user": "your_user",
    "password": "your_password",
    "database": "main_database",
    "description": "메인 프로덕션 DB"
  },
  {
    "name": "test_db", 
    "host": "localhost",
    "port": 3306,
    "user": "test_user",
    "password": "test_password",
    "database": "test_database",
    "description": "테스트용 DB"
  },
  {
    "name": "analytics_db",
    "host": "analytics.example.com",
    "port": 3306,
    "user": "analytics_user", 
    "password": "analytics_password",
    "database": "analytics_database",
    "description": "분석용 DB"
  }
]'

# ===========================================
# 기본 DB 설정 (도구에서 database_name 미지정시 사용)
# ===========================================
DEFAULT_DATABASE=main_db

# ===========================================
# 안전 설정
# ===========================================
SAFE_MODE=true
MAX_ROWS=1000
ENABLE_DELETE=false
ENABLE_DROP=false

# 각 DB별로 허용할 데이터베이스 이름들
ALLOWED_DBS=main_database,test_database,analytics_database

# ===========================================
# MCP 설정
# ===========================================
MCP_SERVER_NAME=database-mcp

# ===========================================
# Docker 환경 예제 (로컬 개발용)
# ===========================================
# Docker로 실행 중인 DB 컨테이너들의 설정
DOCKER_DATABASES='[
  {
    "name": "docker_maria",
    "host": "localhost", 
    "port": 3306,
    "user": "root",
    "password": "rootpassword",
    "database": "test_db",
    "description": "Docker MariaDB"
  },
  {
    "name": "docker_postgres",
    "host": "localhost",
    "port": 5432,
    "user": "postgres", 
    "password": "postgres",
    "database": "postgres",
    "description": "Docker PostgreSQL",
    "type": "postgresql"
  }
]'
